# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=dcd186097b

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "products_post_others.csv"
    fields:
      - "name"
      - "description"
      - "price"
    skipHeader: true
  environments:
    production:
      API_HOST: "https://api.production.com"
      AUTH_TOKEN: "Bearer invalid_token"
  plugins:
    expect: {}

scenarios:
  - name: "Create product with various failure and edge cases"
    flow:
      - log: "Sending a request with a missing required name field"
        # missing required field name
        post:
          url: "/products"
          headers: 
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 405
            
      - think: 1
      
      - log: "Sending a request with invalid price field (negative value)"
        # price is negative, which should be invalid
        post:
          url: "/products"
          headers: 
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: -10
          expect:
            - statusCode: 405
            
      - think: 1
      
      - log: "Sending a request with extra fields not defined in the API spec"
        # extra undefined fields
        post:
          url: "/products"
          headers: 
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
            color: "red"
          expect:
            - statusCode: 405
            
      - think: 1
      
      - log: "Sending a request with an invalid authorization token"
        # invalid authorization token
        post:
          url: "/products"
          headers: 
            Authorization: "Bearer invalid_token" # Intentionally setting invalid for this test
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 401
        
      - think: 1
      
      - log: "Sending a request to an invalid URL (missing a slash)"
        # Invalid URL without leading slash
        post:
          url: "products" # Missing leading slash
          headers: 
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404

