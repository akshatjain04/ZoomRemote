# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=7b2a6b6959

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "products_productId_put_others.csv"
    skipHeader: true
    fields:
      - "productId"
      - "name"
      - "description"
      - "price"
  plugins:
    expect: {}

scenarios:
  - name: "Product update failure cases"
    flow:
      - log: "Sending request without productId - expect to fail with 404 Not Found"
      - put:
          url: "/products/"
          json:
            id: 10
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
        expect:
          - statusCode: 404
          - hasProperty: "description"
          - hasHeader: "Content-Type"
      - think: 1

      - log: "Sending request with invalid productId - expect to fail with 404 Not Found"
      - put: 
          url: "/products/invalid"
          json:
            id: "{{ productId }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
        expect:
          - statusCode: 404
          - hasProperty: "description"
          - hasHeader: "Content-Type"
      - think: 1

      - log: "Sending request with missing required name field in payload - expect to fail with 404 Not Found"
      - put: 
          url: "/products/{{ productId }}"
          json:
            id: "{{ productId }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
        expect:
          - statusCode: 404
          - hasProperty: "description"
          - hasHeader: "Content-Type"
      - think: 1

      - log: "Sending request with invalid Authorization token - expect to fail with 404 Not Found"
      - put: 
          url: "/products/{{ productId }}"
          json:
            id: "{{ productId }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "InvalidToken"
        expect:
          - statusCode: 404
          - hasProperty: "description"
          - hasHeader: "Content-Type"

