# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=7b2a6b6959

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    - path: "products_productId_put_success.csv"
      skipHeader: true
      fields:
        - "name"
        - "description"
        - "price"
  plugins:
    expect: {}

scenarios:
  - name: "Update product scenario"
    flow:
      - # Update product with a valid new name, description, and price
        put:
          url: "/products/4"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          log: "Updating the product with an ID of 4 using valid payload."
        think: 1
        expect:
          - statusCode: 200
          - hasProperty: "name"
          - hasProperty: "description"
          - hasProperty: "price"

      - # Update product with another valid set of data
        put:
          url: "/products/4"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          log: "Trying to update the same product with different valid payload."
        think: 1
        expect:
          - statusCode: 200
          - hasProperty: "name"
          - hasProperty: "description"
          - hasProperty: "price"

      - # Update product without changing any data
        put:
          url: "/products/4"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          log: "Updating the product with same data to verify idempotency."
        think: 1
        expect:
          - statusCode: 200
          - hasProperty: "name"
          - hasProperty: "description"
          - hasProperty: "price"

      - # Update product with only required field 'name'
        put:
          url: "/products/4"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
          log: "Updating product with only the required 'name' field to verify minimal payload acceptance."
        think: 1
        expect:
          - statusCode: 200
          - hasProperty: "name"

