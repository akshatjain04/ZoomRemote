# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=70199667a6

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  defaults:
    headers:
      Content-Type: 'application/json'
  payload:
    path: "products_get_others.csv"
    fields:
      - "invalidName"
      - "invalidPrice"
    skipHeader: true
  environments:
    staging:
      API_HOST: "https://staging.example.com"
      AUTH_TOKEN: "Bearer INVALID_TOKEN"
  plugins:
    expect: {}

scenarios:
  - name: "Product API failure cases"
    flow:
      - log: "Testing with invalid authorization token"
      - get:
          url: "/products"
          auth:
            bearer:
              token: "{{ $processEnvironment.INVALID_AUTH_TOKEN }}"
          expect:
            - statusCode: 401
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
        # Expect to receive an unauthorized status code due to invalid token

      - think: 2

      - log: "Testing with invalid content type header"
      - get:
          url: "/products"
          headers:
            Content-Type: "text/plain"
          expect:
            - statusCode: 415
        # Expect to receive a status code for unsupported media type due to incorrect Content-Type header

      - think: 2

      - log: "Testing with an invalid request payload (incorrect data format)"
      - get:
          url: "/products"
          json:
            invalidName: "{{ invalidName }}"
            invalidPrice: "{{ invalidPrice }}"
          expect:
            - statusCode: 400
          headers:
            Content-Type: "application/json"
        # Expect to receive a bad request status code due to invalid payload format

      - think: 2

      - log: "Testing with invalid URL"
      - get:
          url: "/productz"
          expect:
            - statusCode: 404
        # Expect to receive not found status code due to non-existent URL path

      - think: 2

      - log: "Testing with missing required fields in payload"
      - get:
          url: "/products"
          json:
            name: null
          expect:
            - statusCode: 400
        # Expect to receive a bad request status code due to missing required fields in the request payload

