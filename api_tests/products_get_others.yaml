# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=70199667a6

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - arrivalRate: 1
      duration: 1
  plugins:
    expect: {}
  payload:
    path: "products_get_others.csv"
    fields:
      - "name"
      - "description"
      - "price"
    skipHeader: true
  environments:
    staging:
      API_HOST: "https://staging.example.com"
      AUTH_TOKEN: "Bearer invalid_token"

scenarios:
  - name: "Testing failure and edge cases for Get All Products endpoint"
    flow:
      - log: "Sending request with invalid Authorization header"
        post:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          # Expected behavior: Receive an response indicating an unauthorized request
          expect:
            - statusCode: 401
            - hasProperty: ["error", "message"]
            - hasHeader: "Content-Type"

      - think: 1

      - log: "Sending request to an invalid URL"
        post:
          url: "/invalid_products"
          headers: {}
          # Expected behavior: Receive a 404 Not Found status code
          expect:
            - statusCode: 404
            - hasProperty: ["error", "message"]
            - hasHeader: "Content-Type"

      - think: 1

      - log: "Sending request with missing required 'name' field in the payload"
        post:
          url: "/products"
          headers: {}
          json:
            description: "{{ description }}"
            price: "{{ price }}"
          # Expected behavior: The request fails with a 422 Unprocessable Entity due to missing required field
          expect:
            - statusCode: 422
            - hasProperty: ["error", "message"]
            - hasHeader: "Content-Type"

      - think: 1

      - log: "Sending request with an invalid type for 'price' (string instead of integer)"
        post:
          url: "/products"
          headers: {}
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "invalid_string"
          # Expected behavior: The request fails with a 400 Bad Request due to type mismatch
          expect:
            - statusCode: 400
            - hasProperty: ["error", "message"]
            - hasHeader: "Content-Type"

