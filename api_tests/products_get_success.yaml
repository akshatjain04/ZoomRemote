# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=70199667a6

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  plugins:
    expect: {}
  payload:
    path: "products_get_success.csv"
    fields:
      - "name"
      - "description"
      - "price"
    skipHeader: true

scenarios:
  - name: "Get all products"
    flow:
      - log: "Request to get all products without any filters."
      - get:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          # Expected: A successful response with a list of products.
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
      - think: 1

      - log: "Request to get all products with name filter from CSV."
      - get:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          qs:
            name: "{{ name }}"
          # Expected: A successful response with a list of filtered products by name.
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
      - think: 1

      - log: "Request to get all products with description filter from CSV."
      - get:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          qs:
            description: "{{ description }}"
          # Expected: A successful response with a list of filtered products by description.
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
      - think: 1

      - log: "Request to get all products with price filter from CSV."
      - get:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          qs:
            price: "{{ price }}"
          # Expected: A successful response with a list of filtered products by price.
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
      - think: 1

