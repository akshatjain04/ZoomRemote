# ********RoostGPT********
"""
Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4

ROOST_TEST_HASH=do_POST_27a0080553

1. Scenario: Test the function when the content length in the header is zero.
   - Expectation: The function should not crash and should be able to handle this situation gracefully.

2. Scenario: Test the function when the POST data is empty.
   - Expectation: The function should not crash and should be able to handle this situation gracefully. 

3. Scenario: Test the function when the POST data does not contain any '=' character.
   - Expectation: The function should not crash and should be able to handle this situation gracefully. 

4. Scenario: Test the function when the POST data contains multiple '&' characters.
   - Expectation: The function should correctly split the keys.

5. Scenario: Test the function when the path is not '/index.html'.
   - Expectation: The function should not execute the hotkey command and should directly call the do_GET function.

6. Scenario: Test the function when the path is '/index.html'.
   - Expectation: The function should execute the hotkey command and then call the do_GET function.

7. Scenario: Test the function when the hotkey command fails.
   - Expectation: The function should be able to handle this situation gracefully and should not crash.

8. Scenario: Test the function when the hotkey command succeeds.
   - Expectation: The function should print "Done!" and then call the do_GET function.

9. Scenario: Test the function when the do_GET function fails.
   - Expectation: The function should be able to handle this situation gracefully and should not crash.

10. Scenario: Test the function when the do_GET function succeeds.
    - Expectation: The function should successfully execute the do_GET function after the hotkey command (if the path is '/index.html').
"""

# ********RoostGPT********
def calculator(operation, num1, num2):
    if operation == 'add':
        return num1 + num2
    elif operation == 'subtract':
        return num1 - num2
    elif operation == 'multiply':
        return num1 * num2
    elif operation == 'divide':
        return num1 / num2
    else:
        return 'Invalid operation'
