# ********RoostGPT********
"""
Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4

ROOST_TEST_HASH=do_GET_e45d6f38a1

1. Scenario: Check if the function correctly identifies the local path.
   - Description: Provide a path that exists in the defined list ['/', '/index.html', '/favicon.ico', '/ZoomRemoteDir']. The function should identify the given path and call the `self.send_local(self.path)` function.

2. Scenario: Check if the function correctly calls the `super().do_GET()` for non-defined paths.
   - Description: Provide a path that is not defined in the list ['/', '/index.html', '/favicon.ico', '/ZoomRemoteDir']. The function should not identify the given path and call the `super().do_GET()` function.

3. Scenario: Check if the function handles empty path input correctly.
   - Description: Provide an empty path(""). The function should treat this as a root path("/") and call the `self.send_local(self.path)` function.

4. Scenario: Check if the function handles case sensitivity correctly.
   - Description: Provide a path that is similar to one defined in the list but in different case (like '/INDEX.HTML'). Check if the function is case sensitive and how it handles such inputs.

5. Scenario: Check if the function handles trailing slashes correctly.
   - Description: Provide a path that is similar to one defined in the list but with a trailing slash (like '/index.html/'). Check if the function still identifies the path and calls the `self.send_local(self.path)` function.

6. Scenario: Check if the function handles paths with additional parameters correctly.
   - Description: Provide a path that is similar to one defined in the list but with additional parameters (like '/index.html?param=value'). Check if the function still identifies the path and calls the `self.send_local(self.path)` function. 

7. Scenario: Check if the function handles non-string path inputs correctly.
   - Description: Provide a non-string path input (like integer or float). Check how the function handles such inputs.
"""

# ********RoostGPT********
def calculator(operation, num1, num2):
    if operation == 'add':
        return num1 + num2
    elif operation == 'subtract':
        return num1 - num2
    elif operation == 'multiply':
        return num1 * num2
    elif operation == 'divide':
        return num1 / num2
    else:
        return 'Invalid operation'
